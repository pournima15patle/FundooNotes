{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-08T12:03:49.630Z",
    "end": "2019-05-08T12:03:50.109Z",
    "duration": 479,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "c4d389cc-b585-4641-9b5f-7f70ef2b1298",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "c3d6fe6c-791a-4e5a-b76f-c392c900dab3",
        "title": "userModel",
        "fullFile": "/home/admin1/fundooNotes/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "userModel \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log('Server staring...')\nserver = app.listen(done);",
            "err": {},
            "isRoot": false,
            "uuid": "64eb78a0-486f-4b0b-8898-dd87f545d646",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "userModel \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log('Server stopping...')\nserver.close(done);",
            "err": {},
            "isRoot": false,
            "uuid": "7469dd19-0cee-4972-ba05-7ee199c5a789",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should log in and log out with live server",
            "fullTitle": "userModel should log in and log out with live server",
            "timedOut": false,
            "duration": 187,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/userModels/login')\n  .send(test.login)\n  .end(function (err, loginRes) {\n    if (err) { return done(err); }\n    // this.timeout(15000);\n    // setTimeout(done, 15000);\n    assert.equal(loginRes.status, 200);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "72620fcf-510b-4a28-802d-bd61df69ccb1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should forgot password successfully",
            "fullTitle": "userModel should forgot password successfully",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/userModels/reset')\n  .send(test.forgot)\n  .end(function (err, forgotRes) {\n    if (err) { return done(err); }\n    assert.equal(forgotRes.status, 204);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "bb436a11-48d9-46b1-906f-469648fdcace",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should reset the password successfully",
            "fullTitle": "userModel should reset the password successfully",
            "timedOut": false,
            "duration": 228,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/userModels/reset-password')\n  .set('Authorization', '5IOjVfVHotnjZ6P48bpsdhG5Qi0Hw9TZpIXxeL9I3pIABtfoJaJBhIvZdB1hRJs3')\n  .send(test.reset)\n  .end(function (err, loginRes) {\n    if (err) { return done(err); }\n    assert.equal(loginRes.status, 204);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "4499e66f-21f4-45da-9e2b-41787d7e7baa",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "72620fcf-510b-4a28-802d-bd61df69ccb1",
          "bb436a11-48d9-46b1-906f-469648fdcace",
          "4499e66f-21f4-45da-9e2b-41787d7e7baa"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 433,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c58a2560-edda-42a7-8f2b-4c45aefe730b",
        "title": "notes",
        "fullFile": "/home/admin1/fundooNotes/test/test.js",
        "file": "/test/test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "notes \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "server = app.listen(done);",
            "err": {},
            "isRoot": false,
            "uuid": "963d6f59-9f2a-4cfb-89b5-895bf7124d2d",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "notes \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "server.close(done);",
            "err": {},
            "isRoot": false,
            "uuid": "ca6705ed-6af8-41ff-9663-04979c9cf784",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should set the reminder for notes",
            "fullTitle": "notes should set the reminder for notes",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/notes/reminderNotes')\n  .send(test.reminder)\n  .end(function (err, reminderRes) {\n    if (err) { return done(err); }\n    console.log(\"jhjyug\", reminderRes.body);\n    assert.equal(reminderRes.status, 200);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "1e555cb7-ad3c-44e4-a7f2-36cf6e866497",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should set the notes mark as trash",
            "fullTitle": "notes should set the notes mark as trash",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/notes/trash')\n  .send(test.trash)\n  .end(function (err, reminderRes) {\n    if (err) { return done(err); }\n    console.log(\"Response\", reminderRes.body);\n    assert.equal(reminderRes.status, 200);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "37db81ca-6415-4952-b84f-92e08ab60d35",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should set the notes mark as archive",
            "fullTitle": "notes should set the notes mark as archive",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .post('/api/notes/archive')\n  .send(test.archive)\n  .end(function (err, reminderRes) {\n    if (err) { return done(err); }\n    console.log(\"Response\", reminderRes.body);\n    assert.equal(reminderRes.status, 200);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "02208c61-1826-43a0-960b-05aba408cf28",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should set the search for notes",
            "fullTitle": "notes should set the search for notes",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(\"http://localhost:3000\")\n  .get('/api/notes/searchNotes')\n  .send(test.search)\n  .end(function (err, searchRes) {\n    if (err) {\n      return done(err);\n    }\n    console.log(\"response\", searchRes.body);\n    assert.equal(searchRes.status, 200);\n    done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "211530b7-070e-451d-9e0d-6a896837a3db",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "1e555cb7-ad3c-44e4-a7f2-36cf6e866497",
          "37db81ca-6415-4952-b84f-92e08ab60d35",
          "02208c61-1826-43a0-960b-05aba408cf28",
          "211530b7-070e-451d-9e0d-6a896837a3db"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 22,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}